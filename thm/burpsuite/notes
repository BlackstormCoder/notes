The BurpSuite
===============

Overview of burp's features
-----------------------------

    Proxy - What allows us to funnel traffic through Burp Suite for further analysis
    
    Target - How we set the scope of our project. We can also use this to effectively create a 
    site map of the application we are testing.
    
    Intruder - Incredibly powerful tool for everything from field fuzzing to credential stuffing and more
    
    Repeater - Allows us to 'repeat' requests that have previously been made with or without modification. Often used in a precursor step to fuzzing with the aforementioned Intruder
    
    Sequencer - Analyzes the 'randomness' present in parts of the web app which are intended to be unpredictable. This is commonly used for testing session cookies
    
    Decoder - As the name suggests, Decoder is a tool that allows us to perform various transforms on pieces of data. These transforms vary from decoding/encoding to various bases or URL encoding.
    
    Comparer - Comparer as you might have guessed is a tool we can use to compare different responses or other pieces of data such as site maps or proxy histories (awesome for access control issue testing). This is very similar to the Linux tool diff.
    
    Extender - Similar to adding mods to a game like Minecraft, Extender allows us to add components such as tool integrations, additional scan definitions, and more!
    
    Scanner - Automated web vulnerability scanner that can highlight areas of the application for further manual investigation or possible exploitation with another section of Burp. This feature, while not in the community edition of Burp Suite, is still a key facet of performing a web application test.

Which tool in Burpsuite can we use to perform a 'diff' on responses and other peices of data?
	Comparer

What tool could we use to analyze randomness in different peices of data such has password reset tokens?
	Sequencer

Which tool can we use to set the scope of our project?
	Target

While only available in the premium versions of Burpsuite, which tool can we use to automatically identify different vulnerabilities in the application we are examining?
	Scanner

Encoding or decoding data can be particularly useful when examining URL parameters or protections on a form, which tool allows us to do just that?
	Decoder

Which tool allows us to redirect our web traffic into Burp for further examination?
	Proxy

Simple in concept but powerful in execution, which tool allows us to reissue requests?
	Repeater

With four modes, which tool in Burp can we use for a variet y of purposes such as field fuzzing?
	Intruder

Last but certainly not least, which tool allows us to modify Burpsuite via the addition of extensions?
	Extender

--------------------------------------------------------------------------------

Proxy Tab

- Requests by default require our authorization to be sent.

- We can perform MITM attack 

- We can drop the requests or perform another action 

- Can send these requests to other tabs such as repeater and intruder for further deeper work.

--------------------------------------------------------------------------------

Target Tab

One of the most important feature while performing a penetration test.

Target tabs allows the following important aspects:
	- Defining our scope
	- Viewing a site map
	- Specifying our issue definitions(This is more useful in report generation and scanning(scanner tab (pro feature)))

When starting a web application test you'll very likely be provided a few things:
	- the application URL (hopefully for test and not prod)
	- A list of the different user roles within the application
	- Various test accounts and associated credentials for those accounts 
	- A list of forms in application which are out-of-scope for testing and should be avoided.

With this information we can start to build our scope of testing of the web-app. This is important in case we need to perform an automated testing. 

So what we do is browse the site as a normal user with the burp proxy enabled, and this way of exploring the site is known as "happy path" as we roam around like a normal easy user, and by this burp creates a site map in the target tab.
With that sitemap, we later remove some items from the scope, based on the following criteria:
	- The item has been defined out of scope in the documentation by the client.
	- Automated exploitation with intruder can cause problem, like 100s of password reset emails.
	- Automated with exploitation could also lead in crashing the web-app.

Once, the scope is clear, we can move onto Burps, various tools for further testing.

Note: Turn off the intercept while following the happy path, while connected to proxy in foxyproxy. This will stop asking for forwarding, and allow us to freely move around in the site, as this create the sitemap while we discover more places in the site.

=============================================================================================
IMPORTANT: BEFORE ENTERING BUG HUNTING LOOK AT THE BURP'S ISSUE DEFINITION IN TARGET TAB. IT GIVES A LOT OF INFORMATION ABOUT THE WEB APP. AND I GUESS MAY BE THAT'S IT - ALL IN WEB APP TESTING.
=============================================================================================

----------------------------------------------------------------------------------------------

Puttin' it on Repeat[er]
=========================

- Repeater allows us to repeat a request we made.
- Repeater is typically used for expermenting (where automation might not be needed)
- Repeater can alse be used to recreate and finding proof of concept.

-----------------------------------------------------------------------------------------------

Help! There's an Intruder!
===========================

- Intruder is a very powerful tool ranging from fuzzing to bruteforcing.
- It helps in automation while attacks.

Automation like:
	- Enumerating identifiers like usernames and other cookie fields
	- Grepping our responses
	- Fuzzing for SQL, XSS and file path traversal

Type of Attacks in Intruder
------------------------------

	- Sniper : The most popular of all. This takes only 1 payload (1 wordlist). This type of attack, bruteforce the selected payload with strings loaded or the file chosen containing the payload strings.

	- Battering Ram - Similar to Sniper in taking only ONE SET OF PAYLOAD. What this actually does different is set the same payload string, in many places selected. This is used in case when there is same string required in within many parameters.

	- Pitchfork - This type of attack takes multiple payload set, and cycles through the combinations of username and password, resulting in total no of combinations equal to the SMALLEST PAYLOAD SET OF STRINGS.

	- Cluster Bomb - Similar to Pitchfork in taking multiple sets of payload, but this type of attack cycles through all possible types of combination with the payloads. Here total no of combinations is equal to payload 1 x paylaod 2 x payload n......

	NOTE: If using burp's community version, this type of attack (cluster bomb) will be very long.

---------------------------------------------------------------------------------------------

The Burp Sequencer
===================

- Sequencer is kind of an advance tool that checks the randomness in session tokens and cookies that are generally unpredictable. If cookies or session token persist... They might be vulnerable... Sequencer's work is to just check the randomness.

- Sequencer can analyze data like:
	- Session tokens
	- Anti-CSRF tokens
	- Password reset tokens

Ok so at the end of the sequencer section... I can tell this is pretty messed up stuff... I understand hardly any bit... Because all that entropy and stuff... I am really not made up for that yet.

----------------------------------------------------------------------------------------------

Decoder and Comparer
=====================

- Decoder is same as cyberchef tool, just slightly less powerful, but her it's an integration in burp... So if we want, we can use it.

On the other hand, comparer does the work of comparing, the responses.

Comparer can help us in comparing for the following cases:
	- Username enumeration, you can compare responses of failed login using valid and invalid usernames.
	- If got very large responses during an Intruder attack, with different length, send it to comparer for comparing.
	- When testing for blind SQL and boolean condition injection and other similar tests.

Note: There is a smart mode in decoder which automatically identifies where to decoe from.

Note: Comparer can be used to compare site maps of a web-app.

-----------------------------------------------------------------------------------------------

Extender
=========

For the extender there are some already specified plugins for burp to use inside the rooms extender section. Check it out, if you want to... but later you will figure them out automatically.

